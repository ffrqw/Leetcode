public class Solution {
    public int integerBreak(int n) {
        /*
        dp
        by observe, n is better to divide by 2 or 3
        so dp[i] = max(dp[i-2]*2, dp[i-3]*3)
        */
        // time n
        // space n
        
        // n>=2
        
        // base case
        if(n<=3)return n-1;
        
        int[] dp = new int[n+1];
        dp[2] = 1;
        dp[3] = 2;
        dp[4] = 4;
        
        for(int i = 4;i<=n;i++)
        {
            dp[i] = Math.max((i-2)*2,(i-3)*3);
            int tmp = Math.max(dp[i-2]*2,dp[i-3]*3);      // even dp[1] = 0 is right
            dp[i] = Math.max(tmp,dp[i]);
        }
        return dp[n];
    }
}
