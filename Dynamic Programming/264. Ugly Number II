public class Solution {
    public int nthUglyNumber(int n) {
        /*
        basic idea is:
        2x1, 2x2, 2x3..
        3x1, 3x2, ...
        5x1, 5x2, ...
        then like merge sort, to arrange them ascendingly 
        into ugly[]
        we use i2, i3, i5 to indicate the corresponding
        index (2,3,5)
        */
        // time n
        // space n
        
        int[] ugly = new int[n];
        ugly[0] = 1;
        int i2 = 0, i3 = 0, i5 = 0;
        int f2 = 2, f3 = 3, f5 = 5;
        // ugly[0] is 1;
        for(int i = 1;i<n;i++)
        {
            int min = Math.min(Math.min(f2,f3),f5);
            ugly[i] = min;
            if(min==f2)
                f2 = 2*ugly[++i2];                      // even when f2 = f3, they will be refresh at the same ith loop. coz min =f2=f3
            if(min==f3)
                f3 = 3*ugly[++i3];
            if(min==f5)
                f5 = 5*ugly[++i5];
        }
        return ugly[n-1];
    }
}
