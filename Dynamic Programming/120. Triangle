public class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        // use dp[][], dp bottom up
        // dp[i][j]+= min(dp[i+1][j],dp[i+1][j+1])
        // until dp[0][0]
        
        // time n
        // space n
        
        // base case
        if(triangle.size()==0) return 0;
        if(triangle.size()==1) return triangle.get(0).get(0);
        
        for(int i= triangle.size()-2;i>=0;i--)
        {
            for(int j = 0;j<=i;j++)
            {
                
                triangle.get(i).set(j, triangle.get(i).get(j)+Math.min(triangle.get(i+1).get(j),triangle.get(i+1).get(j+1)));
            }
        }
        return triangle.get(0).get(0);
    }
}
