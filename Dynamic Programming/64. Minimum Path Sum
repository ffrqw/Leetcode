public class Solution {
    public int minPathSum(int[][] grid) {
        /*
        dp
        calc every cell' minpathsum
        store in grid[][]
        */
        // time m*n
        // space 1
        
        // base case
        if(grid.length==0)return 0;
        
        for(int i = 0;i<grid.length;i++)
        {
            for(int j = 0;j<grid[0].length;j++)
            {
                if(i+j==0)continue;
                // the minpathsum of the cell is
                // add the min(left_sum, up_sum)
                int left = Integer.MAX_VALUE;
                int up = Integer.MAX_VALUE;
                if(i-1>=0)
                    left = grid[i-1][j];
                if(j-1>=0)
                    up = grid[i][j-1];
                grid[i][j]+=Math.min(left,up);
            }
        }
        return grid[grid.length-1][grid[0].length-1];
    }
}
