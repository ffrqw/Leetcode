public class Solution {
    public int numDecodings(String s) {
        /*
        dp
        dp[i] is the numDecodings, i implies the sub string ending at index i
        dp[i] = (if legal :dp[i-1]) +(if legal :dp[i-2])
        we can do the above due to the max 'Z' is 26, 2 digit, so we only need
        to tell if the last 2 digit is <26
        besides, when charAt(i) = '0', dp[i-1] is not legal
        */
        
        // ps: we ignore the wrong input like "1000000000"
        
        // time n
        // space n
        
        // corner case
        if(s.length()==0||s.charAt(0)=='0')return 0;
        if(s.length()==1)return 1;
        int[] dp = new int[s.length()];
        dp[0] = 1;
        
        // calc dp[1], coz "12"
        int sum = (s.charAt(0)-'0')*10+s.charAt(1)-'0';
        if(s.charAt(1)!= '0')
            dp[1]++;
        if(sum<=26)
            dp[1]++;
        //System.out.print(dp[1]);
        for(int i = 2;i<s.length();i++)
        {
            int tmp = (s.charAt(i-1)-'0')*10+s.charAt(i)-'0';
            int prev = (s.charAt(i-2)-'0')*10+s.charAt(i-1)-'0';
            
            if(i-1>=0&&
            (s.charAt(i)!='0'&&(s.charAt(i-1)!='0'||(prev<=26&&prev>=10))))
                dp[i] += dp[i-1];
                
            
            if(i-2>=0&&
            tmp<=26&&tmp>=10)
                dp[i] += dp[i-2];
        }
        return dp[dp.length-1];
    }
}
