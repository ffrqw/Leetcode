public class Solution {
    public int coinChange(int[] coins, int amount) {
        /*
        coins.sort
        for i = 1-amount
        i first check if have same val coin
        for every coin val
        find the min dp[i-coin val]+1 
        */
        // time n*#coin type
        // space amount
        
        // base case
        if(amount==0)return 0;
        if(coins.length==0)return -1;
        
        int[] dp = new int[amount+1];
        dp[0] = -1;
        Arrays.sort(coins);
        for(int i = 1;i<=amount;i++)
        {
            dp[i] = Integer.MAX_VALUE;
            for(int j = coins.length-1;j>=0;j--)
            {
                if(i==coins[j]){
                    dp[i] = 1;
                    break;
                }
                // find the min dp[i-coin val]+1
                if(i-coins[j]>0&&dp[i-coins[j]]!=-1)
                    dp[i] = Math.min(dp[i],dp[i-coins[j]]+1);
            }
            if(dp[i]==Integer.MAX_VALUE) dp[i] = -1;
        }
        return dp[amount];
    }
}
