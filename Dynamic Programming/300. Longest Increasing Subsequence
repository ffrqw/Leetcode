public class Solution {
    public int lengthOfLIS(int[] nums) {
        /*
        use a dp[i] to store the max lengh of the sublist
        ended at i.
        for j in 0-i-1, find the max nums[i]>nums[j]'s dp[j]+1 = dp[i]
        */
        // time n^2
        // space n
        
        // corner case
        if(nums.length==0)return 0;
        
        int[] dp = new int[nums.length];
        dp[0] = 1;
        
        int max = 1;
        for(int i = 1;i<nums.length;i++)
        {
            dp[i]=1;
            for(int j = 0;j<i;j++)
            {
                if(nums[i]>nums[j])
                {
                    dp[i] = Math.max(dp[i],dp[j]+1);
                }
                max = Math.max(max,dp[i]);
            }
        }
        return max;
    }
}
