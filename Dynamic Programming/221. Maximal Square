public class Solution {
    public int maximalSquare(char[][] matrix) {
        /*
        basic deduction formula is: 
        以当前点(x,y) = '1' 为右下角的最大正方形的边长f(x,y) = min( f(x-1,y), f(x,y-1), f(x-1,y-1)) + 1
        */
        // time n
        // space n
        
        if(matrix.length==0)return 0;
        
        int max = 0;
        int m = matrix.length;
        int n = matrix[0].length;
        int[][] dp = new int[m][n];
        
        for(int i=0;i<m;i++)
            for(int j = 0;j<n;j++)
            {
                if(matrix[i][j]=='1')
                {
                    if(i-1>=0&&j-1>=0)
                        dp[i][j] = Math.min(Math.min(dp[i-1][j],dp[i-1][j-1]),dp[i][j-1])+1;
                    else
                        dp[i][j] = 1;
                    max = Math.max(max,dp[i][j]);
                }
            }
        return max*max;
    }
}
