/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        /*
        pass a list to store the ans.
        
        */
        List<String> ans = new ArrayList<>();
        String str = "";
        ans = dfs(root, str, ans);
        return ans;
    }
    
    public List<String> dfs(TreeNode root, String str, List<String> ans){
        // base case
        if(root==null) return ans;
        
        // leaf node
        if(root.left==null&&root.right==null)
        {
            ans.add(str+Integer.toString(root.val));
            return ans;
        }
        //simplifier
        
        if(root.left!=null)
            ans = dfs(root.left, str+Integer.toString(root.val)+"->", ans);
        
        if(root.right!=null)
            ans = dfs(root.right, str+Integer.toString(root.val)+"->", ans);

        return ans;
    }
}
