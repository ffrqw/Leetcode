/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int minDepth(TreeNode root) {
        
        // base case
        if(root == null)return 0;
        
        int min= dfs(root, 0, Integer.MAX_VALUE);
        return min;
    }
    
    public int dfs(TreeNode root, int dep, int min){
        // dep is to record the current depth
        // min is to record the min, to compare
        // if leaf node
        if(root.left==null&&root.right==null)
            return min>(dep+1)?dep+1:min;
        
        // simplifier
        if(root.left!=null)
            min = dfs(root.left, dep+1, min);
        if(root.right!=null)
            min = dfs(root.right, dep+1, min);
        return min;
    }
}
