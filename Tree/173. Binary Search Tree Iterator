/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {

    public BSTIterator(TreeNode root) {
        
        // push all left nodes into the stack
        stack = new Stack<>();
        pushAll(root);
        //stack.push(p);
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !stack.isEmpty();
    }

    /** @return the next smallest number */
    public int next() {
        TreeNode ans = stack.pop();
        if(ans.right!=null)
            pushAll(ans.right);
        return ans.val;
    }
    private
    Stack<TreeNode> stack;
    private void pushAll(TreeNode root){
        while(root!=null)
        {
            stack.push(root);
            root=root.left;
        }
    }
    
}

/**
 * Your BSTIterator will be called like this:
 * BSTIterator i = new BSTIterator(root);
 * while (i.hasNext()) v[f()] = i.next();
 */
